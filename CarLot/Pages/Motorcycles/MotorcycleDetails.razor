@page "/motorcycle/details/{motorcycleId}"
@using CarLot.Models
@using CarLot.Data
@inject CarLot.Data.MotorcycleService motorcycleService
@inherits OwningComponentBase<MotorcycleService>
@inject IJSRuntime _jsRuntime
@implements IDisposable
@inject NavigationManager NavManager
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor



<link href="./styles/Motorcycles/MotorcycleDetailsStyling.css" rel="stylesheet" />
<img src="/images/lexus-ad.jpg" />

<div class="row">
    <div class="col">
        <a href="@($"motorcycles")">
            <MatIcon Icon="keyboard_backspace"></MatIcon>
        </a>
    </div>



    <div class="col" id="motorcycleList">
        @foreach (var motorcycleList in listMotorcycles.Take(2).ToList())
        {
            <div>
                <a @onclick="@(e => DetailsClick(e))" href="@($"/motorcycle/details/{motorcycleList.MotorcycleId}")">
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(motorcycleList.Image)" />
                </a>
            </div>
        }
    </div>



    <div class="col-7">
        <img src="data:image/jpeg;base64,@Convert.ToBase64String(motorcycles.Image)" />
        <div class="card-body">
            <div id="isNew">
                @if (motorcycles.New == true)
                {
                    <p class="card-text">
                        NEW
                    </p>
                }
                else
                {
                    <p class="card-text">
                        USED
                    </p>
                }
            </div>
            <h1>@motorcycles.Year @motorcycles.Make @motorcycles.DriveTrain</h1>
            <span>@motorcycles.Mileage miles</span>
            <br />
            <span id="price">$@motorcycles.Price</span>
            <br />
            @if (motorcycles.HomeDelivery == true)
            {
                <span class="card-text">Home Delivery</span>
            }
            @if (motorcycles.VirtualAppointments == true)
            {
                <span class="card-text">Virtual Appointments</span>
            }
            <br />
            <a href="#">Value Your Trade-In <MatIcon Icon="open_in_new"></MatIcon></a>
            <h5>Sold By @motorcycles.ApplicationUser.FirstName @motorcycles.ApplicationUser.LastName</h5>
            <MatIcon Icon="location_on"></MatIcon> <a href="#">@motorcycles.ApplicationUser.City, @motorcycles.ApplicationUser.State</a>
            <h2>Vehicle History</h2>
            <a href="#">Get a CARFAX Report</a>
            <h2>Seller's Notes</h2>
            <div class="sellers-notes">
                <h4>Features Notes</h4>
                <p>@motorcycles.Features</p>

                <h4>Sellers Notes</h4>
                <p>@motorcycles.SellerNotes</p>

                <a href="#"><MatIcon Icon="open_in_new"></MatIcon> View this vehicle on dealer's website</a>
                <br />
                <a href="#"><MatIcon Icon="open_in_new"></MatIcon> Check for recalls</a>
                <h2>Basics</h2>
                <h5>Body Style</h5>
                <p>@motorcycles.BodyStyle</p>
                <div class="row">
                    <div class="col">
                        <ul>
                            <li>Fuel Type: @motorcycles.Fuel</li>
                            <li>Mileage: @motorcycles.Mileage</li>
                            <li>Drivetrain: @motorcycles.DriveTrain</li>
                            <li>Transmission: @motorcycles.Transmission</li>
                        </ul>
                    </div>
                    <div class="col">
                        <ul>
                            <li>Exterior Color: @motorcycles.ExteriorColor</li>
                            <li>Cylinders: @motorcycles.Cylinders</li>
                            <li>Make: @motorcycles.Make</li>
                            <li>Year: @motorcycles.Year</li>
                        </ul>
                    </div>

                    <div class="row">
                        <div class="col">
                            <h2>Seller</h2>
                            <p>15315 @motorcycles.ApplicationUser.City, @motorcycles.ApplicationUser.State 12345</p>
                            <a href="#">Get Directions</a>
                            <br />
                            <a href="#">Dealer Details</a>
                            <br />
                            <a href="#">Dealer Website <MatIcon Icon="open_in_new"></MatIcon></a>
                        </div>
                        <div class="col">
                            <p id="interest">Interested in this motorcycle? Reach out.</p>
                            <span>@motorcycles.ApplicationUser.Number</span>
                            <a href="#" class="btn btn-block">Check Availability</a>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="col-5">
        @if (SignInManager.IsSignedIn(httpContextAccessor.HttpContext.User) && Int32.Parse(UserManager.GetUserId(httpContextAccessor.HttpContext.User)) == motorcycles.ApplicationUserId)
        {
            <MatButton Class="edit-delete-btn" Raised="true" TrailingIcon="update" Type="button" @onclick='@(e => OpenModal("motorcycleModal", motorcycles.MotorcycleId))'>Edit</MatButton>
            <MatButton Class="edit-delete-btn" Raised="true" TrailingIcon="delete_forever" Type="button" @onclick='@(e => OpenDeleteModal("deleteConfirmation", motorcycles.MotorcycleId))'>Delete</MatButton>
        }
        else
        {

        }
        <div class="card">
            <div class="card-header">
                <h3>Contact Us</h3> <br />
                <h5 class="card-text">Call: @motorcycles.ApplicationUser.Number</h5>
            </div>
            <div class="card-body">
                <form action="/" method="post">
                    <div class="form-row">
                        <div class="col">
                            <input type="text" class="form-control" placeholder="First Name">
                        </div>
                        <div class="col">
                            <input type="text" class="form-control" placeholder="Last Name">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col">
                            <input type="text" class="form-control" placeholder="Email">
                        </div>
                        <div class="col">
                            <input type="text" class="form-control" placeholder="Phone Number">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col">
                            <select placeholder="Ask A Question" id="inputCheckAvailability" class="form-control">
                                <option selected>Check Availability</option>
                                <option>Request Virtual Appointment</option>
                                <option>Check Home Delivery Options</option>
                                <option>Get A Price Quote</option>
                                <option>Request More Photos</option>
                                <option>Schedule A Test Drive</option>
                                <option>Discuss Financing</option>
                                <option>Ask A Question</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col">
                            <textarea class="form-control" id="textAreaCheckAvailability" rows="5"></textarea>
                        </div>
                    </div>
                    <a href="#" class="btn btn-block">Submit Question</a>
                </form>
                <p class="card-text">
                    By clicking here, you authorize Cars.com
                    and its sellers/partners to contact you by texts/calls
                    which may include marketing and be by autodialer.
                    Calls may be pre-recorded. You also agree to our Privacy Statement.
                    Consent is not required to purchase goods/services.
                </p>
                <div>
                    <p class="card-text">We value your privacy. <a href="#">CarLot.com Privacy Statement.</a></p>
                </div>
            </div>
        </div>

    </div>

    <div class="modal fade" id="motorcycleModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Motorcycle's Information</h5>
                    <MatButton Raised="true" Type="button" data-dismiss="modal" aria-label="Close">X</MatButton>
                </div>
                <div class="modal-body">
                    <form enctype="multipart/form-data">
                        <input type="hidden" @bind="Model.MotorcycleId" id="carId">
                        <input type="hidden" @bind="Model.ApplicationUserId" id="applicationUserId">
                        <input type="hidden" @bind="Model.CreatedDate" id="createdDate">
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.Make" Label="Make"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Price" Label="Price" Icon="attach_money"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Mileage" Label="Mileage"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.DriveTrain" Label="Drivetrain"></MatTextField>
                                </p>
                            </div>
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.Transmission" Label="Transmission"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Cylinders" Label="Cylinders"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Fuel" Label="Fuel"></MatTextField>
                                </p>
                 
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.Features" Label="Features" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.BodyStyle" Label="Body Style" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.ExteriorColor" Label="Exterior Color" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                      
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.SellerNotes" Label="Seller Notes" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <h2>Tell Us More About Your Motorcycle</h2>
                        <p id="p-apply-check">Please Check All That Applies To Your Motorcycle.</p>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Motorcycle Available For Home Delivery?</MatH5>
                                <MatRadioGroup @bind-Value="Model.HomeDelivery" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Motorcycle Available For a Virtual Appointments?</MatH5>
                                <MatRadioGroup @bind-Value="Model.VirtualAppointments" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Motorcycle New?</MatH5>
                                <MatRadioGroup @bind-Value="Model.New" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">

                                <MatH5>Is Your Motorcycle Used?</MatH5>
                                <MatRadioGroup @bind-Value="Model.Used" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Motorcycle Certified Preowned?</MatH5>
                                <MatRadioGroup @bind-Value="Model.CertifiedPreOwned" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">

                                <h5>Motorcycle's Year?</h5>
                                <p>
                                    <MatTextField @bind-Value="Model.Year" Label="Year"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Motorcycle's Image</MatH5>
                                <InputFile multiple OnChange="HandleFileSelected" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <MatButton Raised="true" Type="button" data-dismiss="modal" aria-label="Close">Close</MatButton>
                    <MatButton Raised="true" Type="button" @onclick='@(e => SaveMotorcycle("carModal"))'>Save</MatButton>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteConfirmation" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Are You Sure You Want To Remove This Motorcycle?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" @onclick='@(e => ConfirmDelete("deleteConfirmation"))'>Ok</button>
                </div>
            </div>
        </div>
    </div>


</div>












@code
{
    public Motorcycle motorcycles { get; set; } = new Motorcycle();
    public byte[] ImgUploaded { get; set; }
    public List<Motorcycle> listMotorcycles { get; set; } = new List<Motorcycle>();
    public CarLot.Models.Motorcycle Model = new CarLot.Models.Motorcycle();
    protected bool[] boolItems =
           {
                true,
                false
            };

    public int motorcycleToDelete;

    [Parameter]
    public string motorcycleId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        motorcycles = await motorcycleService.GetMotorcycleByIdAsync(int.Parse(motorcycleId));
        listMotorcycles = await motorcycleService.GetMotorcyclesAsync();
    }

    public async Task DetailsClick(MouseEventArgs e)
    {
        motorcycles = await motorcycleService.GetMotorcycleByIdAsync(int.Parse(motorcycleId));
    }

    public async Task OpenDeleteModal(string modalId, int motorcycleItemId)
    {
        motorcycleToDelete = motorcycleItemId;
        await _jsRuntime.InvokeVoidAsync("global.openModal", modalId);
    }

    public async Task SaveMotorcycle(string modalId)
    {
        if (Model.MotorcycleId == 0)
        {

            // id zero represents new item
            Model.CreatedDate = DateTime.Now;
            Model.Image = ImgUploaded;
            await motorcycleService.AddMotorcycleAsync(Model);
            listMotorcycles = await motorcycleService.GetMotorcyclesAsync();

        }
        else
        {
            Model.ModifiedDate = DateTime.Now;
            Model.Image = ImgUploaded;
            var motorcycleToUpdate = await motorcycleService.UpdateMotorcycleAsync(Model.MotorcycleId);
            listMotorcycles.Where(_ => _.MotorcycleId == Model.MotorcycleId).FirstOrDefault();
            listMotorcycles.Add(motorcycleToUpdate);
            listMotorcycles = await motorcycleService.GetMotorcyclesAsync();
        }
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);

    }

    public async Task ConfirmDelete(string modalId)
    {
        var motorcycleTodelete = listMotorcycles.Where(_ => _.MotorcycleId == motorcycleToDelete).FirstOrDefault();
        await motorcycleService.DeleteMotorcycleAsync(motorcycleToDelete);
        listMotorcycles.Remove(motorcycleTodelete);
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
    }

    public async Task OpenModal(string modalId, int itemMotorcycleId)
    {
        if (itemMotorcycleId == 0)
        {
            Model = new CarLot.Models.Motorcycle();

        }
        else
        {
            Model = listMotorcycles.Where(_ => _.MotorcycleId == itemMotorcycleId).FirstOrDefault();
        }

        await _jsRuntime.InvokeVoidAsync("global.openModal", modalId);
    }

    public async Task CloseModal(string modalId)
    {
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
    }

    async Task HandleFileSelected(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();

        if (file != null)
        {
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);
            ImgUploaded = ms.ToArray();
        }
    }
}
