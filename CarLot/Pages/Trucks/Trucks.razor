@page "/trucks"
@using CarLot.Data
@using CarLot.Models
@inject CarLot.Data.TruckService truckService
@inject IJSRuntime _jsRuntime
@inherits OwningComponentBase<TruckService>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor
@implements IDisposable
@inject NavigationManager NavManager

<link href="./styles/Trucks/TruckIndexStyling.css" rel="stylesheet" />


<div id="ad-1">
    <img src="/images/bus-index-ad.jpg" />
</div>

<h1 id="trucks-for-sale">New & Used Trucks For Sale</h1>

@if (trucks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <AuthorizeView>
        <Authorized>
            <div>
                <MatButton Id="add-bus-btn" Raised="true" TrailingIcon="local_shipping" Type="button" @onclick='@(e => OpenModal("busModal",0))'>Add</MatButton>
            </div>
        </Authorized>
        <NotAuthorized>
            <div id="not-auth">
                <p>
                    <NavLink class="nav-link" href="Identity/Account/Register">Sign Up</NavLink>
                    Or
                    <NavLink class="nav-link" href="Identity/Account/Login">Login</NavLink>
                    To Add A Truck
                </p>
            </div>
        </NotAuthorized>
    </AuthorizeView>

    <div class="row">
        <div class="col" id="filter-col">
            <nav>
                <div class="nav nav-tabs" id="nav-tab" role="tablist">
                    <a class="nav-item nav-link active" id="nav-dropdown-tab" data-toggle="tab" href="#nav-dropdown" role="tab" aria-controls="nav-dropdown" aria-selected="true">Dropdown Search</a>
                    <a class="nav-item nav-link" id="nav-text-tab" data-toggle="tab" href="#nav-text" role="tab" aria-controls="nav-text" aria-selected="false">Type Search</a>
                </div>
            </nav>
            <div class="tab-content" id="nav-tabContent">
                <div class="tab-pane fade show active" id="nav-dropdown" role="tabpanel" aria-labelledby="nav-dropdown-tab">
                    <EditForm Model="@allTrucks">
                        <div class="row">
                            <div class="col">
                                <div>
                                    <span id="filter-count">@allTrucks.Count</span>
                                    <span id="filter-results">Results</span>
                                </div>
                                <div class="form-group">
                                    <label>Makes</label>
                                    <select @onchange="@ReturnTrucksByMake" class="form-control">
                                        <option disabled>Select By Makes</option>
                                        @foreach (var truckMake in allTrucks)
                                        {
                                            <option value="@truckMake.Make">@truckMake.Make</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Prices</label>
                                    <select @onchange="@ReturnTrucksByPrice" class="form-control">
                                        <option disabled>Select By Prices</option>
                                        @foreach (var truckPrice in allTrucks)
                                        {
                                            <option value="@truckPrice.Price">@truckPrice.Price</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Mileages</label>
                                    <select @onchange="@ReturnTrucksByMileage" class="form-control">
                                        <option disabled>Select By Mileage</option>
                                        @foreach (var truckMileage in allTrucks)
                                        {
                                            <option value="@truckMileage.Mileage">@truckMileage.Mileage</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Years</label>
                                    <select @onchange="@ReturnTrucksByYear" class="form-control">
                                        <option disabled>Select By Years</option>
                                        @foreach (var truckYear in allTrucks)
                                        {
                                            <option value="@truckYear.Year">@truckYear.Year</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Body Styles</label>
                                    <select @onchange="@ReturnTrucksByBodyStyle" class="form-control">
                                        <option disabled>Select By Body Styles</option>
                                        @foreach (var truckBodyStyle in allTrucks)
                                        {
                                            <option value="@truckBodyStyle.BodyStyle">@truckBodyStyle.BodyStyle</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Ext. Colors</label>
                                    <select @onchange="@ReturnTrucksByExColor" class="form-control">
                                        <option disabled>Select By Exterior Color</option>
                                        @foreach (var truckExtColor in allTrucks)
                                        {
                                            <option value="@truckExtColor.ExteriorColor">@truckExtColor.ExteriorColor</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Int. Colors</label>
                                    <select @onchange="@ReturnTrucksByIntColor" class="form-control">
                                        <option disabled>Select By Interior Colors</option>
                                        @foreach (var truckIntColor in allTrucks)
                                        {
                                            <option value="@truckIntColor.InteriorColor">@truckIntColor.InteriorColor</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Drivetrains</label>
                                    <select @onchange="@ReturnTrucksByDrivetrain" class="form-control">
                                        <option disabled>Select By Drivetrains</option>
                                        @foreach (var truckDrivetrain in allTrucks)
                                        {
                                            <option value="@truckDrivetrain.DriveTrain">@truckDrivetrain.DriveTrain</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Transmissions</label>
                                    <select @onchange="@ReturnTrucksByTransmission" class="form-control">
                                        <option disabled>Select By Transmissions</option>
                                        @foreach (var truckTransmission in allTrucks)
                                        {
                                            <option value="@truckTransmission.Transmission">@truckTransmission.Transmission</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Cylinders</label>
                                    <select @onchange="@ReturnTrucksByCylinder" class="form-control">
                                        <option disabled>Select By Cylinders</option>
                                        @foreach (var truckCylinder in allTrucks)
                                        {
                                            <option value="@truckCylinder.Cylinders">@truckCylinder.Cylinders</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Fuels</label>
                                    <select @onchange="@ReturnTrucksByFuel" class="form-control">
                                        <option disabled>Select By Fuels</option>
                                        @foreach (var truckFuel in allTrucks)
                                        {
                                            <option value="@truckFuel.Fuel">@truckFuel.Fuel</option>
                                        }
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Door Counts</label>
                                    <select @onchange="@ReturnTrucksByDoorCount" class="form-control">
                                        <option disabled>Select By Door Counts</option>
                                        @foreach (var truckDoorCount in allTrucks)
                                        {
                                            <option value="@truckDoorCount.DoorCount">@truckDoorCount.DoorCount</option>
                                        }
                                    </select>
                                </div>
                                <a @onclick="@(e => FilterClick(e, truckMake, truckPrice, truckMileage, truckYear, truckBodyStyle, truckExColor, truckIntColor, truckDrivetrain, truckTransmission, truckCylinder, truckFuel, truckDoorCount, truckSearchString))" href="@($"trucks?truckMake={truckMake}&truckPrice={truckPrice}&truckMileage={truckMileage}&truckYear={truckYear}&truckBodyStyle={truckBodyStyle}&truckExColor={truckExColor}&truckIntColor={truckIntColor}&truckDrivetrain={truckDrivetrain}&truckTransmission={truckTransmission}&truckCylinder={truckCylinder}&truckFuel={truckFuel}&truckDoorCount={truckDoorCount}&truckSearchString={truckSearchString}")" class="btn">Search</a>
                                <a @onclick="@(e => BackToFullList(e))" href="@($"trucks")" class="btn">Back To Full List</a>
                            </div>
                        </div>
                    </EditForm>
                </div>
                <div class="tab-pane fade" id="nav-text" role="tabpanel" aria-labelledby="nav-text-tab">
                    <div class="form-group">
                        <input placeholder="Search By Makes" @bind-value="SearchTerm" @bind-value:event="oninput" />
                        <a @onclick="@(e => SearchTextTab(e, SearchTerm, truckPrice, truckMileage, truckYear, truckBodyStyle, truckExColor, truckIntColor, truckDrivetrain, truckTransmission, truckCylinder, truckFuel, truckDoorCount, truckSearchString))" href="@($"trucks?truckMake={SearchTerm}&truckPrice={truckPrice}&truckMileage={truckMileage}&truckYear={truckYear}&truckBodyStyle={truckBodyStyle}&truckExColor={truckExColor}&truckIntColor={truckIntColor}&truckDrivetrain={truckDrivetrain}&truckTransmission={truckTransmission}&truckCylinder={truckCylinder}&truckFuel={truckFuel}&truckDoorCount={truckDoorCount}&truckSearchString={truckSearchString}")" class="btn">Search</a>
                    </div>
                    <br />
                    <span class="text-muted ml-5">
                        Showing @FilteredTrucks.Count out of @FilteredTrucks.Count
                    </span>
                    <br />
                    <h4 class="mt-4">List Of Truck Makes</h4>
                    <ul>
                        @foreach (var truckMake in FilteredTrucks)
                        {
                            <li>@truckMake.Make</li>
                        }
                    </ul>
                    <a id="back-to" @onclick="@(e => BackToFullList(e))" href="@($"trucks")" class="btn">Back To Full List</a>
                </div>
            </div>
        </div>
        <div class="col" id="listing-col">
            @foreach (var truck in trucks)
            {
                <div class="card">
                    <div class="row no-gutters">
                        <div class="col-md-5">
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(truck.Image)" class="card-img">
                        </div>
                        <div class="col-md-7">
                            <div class="card-body">
                                <div id="isNew">
                                    @if (truck.New == true)
                                    {
                                        <p class="card-text">
                                            NEW
                                        </p>
                                    }
                                    else
                                    {
                                        <p class="card-text">
                                            USED
                                        </p>
                                    }
                                </div>
                                <h5 class="card-title">@truck.Year @truck.Make</h5>
                                <p class="card-text" id="mileage">@truck.Mileage mi.</p>
                                <h1 id="price" class="card-title">$@truck.Price</h1>
                                <div id="delivery">
                                    @if (truck.VirtualAppointments == true)
                                    {
                                        <span class="card-text">Virtual Appointments</span>
                                    }
                                    @if (truck.HomeDelivery == true)
                                    {
                                        <span class="card-text">Home Delivery</span>
                                    }
                                </div>
                                <div id="row-within-card" class="row">
                                    <div class="col">
                                        <p class="card-text"><strong>Ext. Color:</strong> @truck.ExteriorColor</p>
                                        <p class="card-text"><strong>Int. Color:</strong> @truck.InteriorColor</p>
                                    </div>
                                    <div class="col">
                                        <p class="card-text"><strong>Transmission:</strong> @truck.Transmission</p>
                                        <p class="card-text"><strong>Drivetrain:</strong> @truck.DriveTrain</p>
                                    </div>
                                </div>
                                <div id="more-details">
                                    <p class="card-text">@truck.ApplicationUser.FirstName Of @truck.ApplicationUser.City, @truck.ApplicationUser.State</p>
                                </div>
                                <div id="details-btn">
                                    <a href="@($"truck/details/{truck.TruckId}")" class="btn btn-block">More Details</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}




<div>
    <div class="modal fade" id="truckModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Truck's Information</h5>
                    <MatButton Raised="true" Type="button" data-dismiss="modal" aria-label="Close">X</MatButton>
                </div>
                <div class="modal-body">
                    <form enctype="multipart/form-data">
                        <input type="hidden" @bind="Model.TruckId" id="busId">
                        <input type="hidden" @bind="Model.ApplicationUserId" id="applicationUserId">
                        <input type="hidden" @bind="Model.CreatedDate" id="createdDate">
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.Make" Label="Make"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Price" Label="Price" Icon="attach_money"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Mileage" Label="Mileage"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.DriveTrain" Label="Drivetrain"></MatTextField>
                                </p>
                            </div>
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.Transmission" Label="Transmission"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Cylinders" Label="Cylinders"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Fuel" Label="Fuel"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.DoorCount" Label="Door Count"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.Features" Label="Features" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.BodyStyle" Label="Body Style" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.ExteriorColor" Label="Exterior Color" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.InteriorColor" Label="Interior Color" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.SellerNotes" Label="Seller Notes" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <h2>Tell Us More About Your Truck</h2>
                        <p id="p-apply-check">Please Check All That Applies To Your Truck.</p>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Truck Available For Home Delivery?</MatH5>
                                <MatRadioGroup @bind-Value="Model.HomeDelivery" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Truck Available For a Virtual Appointments?</MatH5>
                                <MatRadioGroup @bind-Value="Model.VirtualAppointments" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Truck New?</MatH5>
                                <MatRadioGroup @bind-Value="Model.New" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">

                                <MatH5>Is Your Truck Used?</MatH5>
                                <MatRadioGroup @bind-Value="Model.Used" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Truck Certified Preowned?</MatH5>
                                <MatRadioGroup @bind-Value="Model.CertifiedPreOwned" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">

                                <h5>Truck's Year?</h5>
                                <p>
                                    <MatTextField @bind-Value="Model.Year" Label="Year"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Truck's Image</MatH5>
                                <InputFile multiple OnChange="HandleFileSelected" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <MatButton Raised="true" Type="button" data-dismiss="modal" aria-label="Close">Close</MatButton>
                    <MatButton Raised="true" Type="button" @onclick='@(e => SaveTruck("truckModal"))'>Save</MatButton>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmation" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Are You Sure You Want To Remove This Truck?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" @onclick='@(e => ConfirmDelete("deleteConfirmation"))'>Ok</button>
            </div>
        </div>
    </div>
</div>





@code
{
    public List<Truck> trucks { get; set; } = new List<Truck>();
    public List<Truck> allTrucks { get; set; } = new List<Truck>();
    public CarLot.Models.Truck Model = new CarLot.Models.Truck();
    public byte[] ImgUploaded { get; set; }
    protected bool[] boolItems =
           {
                true,
                false
            };
    public int truckToDelete;





    string truckMake = "";
    string truckPrice = "";
    string truckMileage = "";
    int? truckYear = 0;
    string truckBodyStyle = "";
    string truckExColor = "";
    string truckIntColor = "";
    string truckDrivetrain = "";
    string truckTransmission = "";
    string truckCylinder = "";
    string truckFuel = "";
    string truckDoorCount = "";
    string truckSearchString = "";

    string SearchTerm { get; set; } = "";

    public List<Truck> SearchTrucksItems { get; set; } = new List<Truck>();
    public List<Truck> FilteredTrucks => SearchTrucksItems.Where(i => i.Make.ToLower().Contains(SearchTerm.ToLower())).ToList();



    protected override async Task OnInitializedAsync()
    {
        trucks = await truckService.GetTrucksAsync();
        allTrucks = await truckService.GetTrucksAsync();
        SearchTrucksItems = await truckService.GetTrucksAsync();

        GetQueryStringValues();
        NavManager.LocationChanged += HandleLocationChanged;

        if (truckMake != null || truckPrice != null || truckMileage != null
        || truckYear != null || truckBodyStyle != null || truckExColor != null
        || truckIntColor != null || truckDrivetrain != null || truckTransmission != null
        || truckCylinder != null || truckFuel != null || truckDoorCount != null || truckSearchString != null)
        {
            trucks = await truckService.GetFilteredTrucks(truckMake, truckPrice, truckMileage, truckYear, truckBodyStyle, truckExColor, truckIntColor, truckDrivetrain, truckTransmission, truckCylinder, truckFuel, truckDoorCount, truckSearchString);
            allTrucks = await truckService.GetFilteredTrucks(truckMake, truckPrice, truckMileage, truckYear, truckBodyStyle, truckExColor, truckIntColor, truckDrivetrain, truckTransmission, truckCylinder, truckFuel, truckDoorCount, truckSearchString);

        }

    }

    public async Task SearchTextTab(MouseEventArgs e, string truckMake, string truckPrice,
        string truckMileage, int? truckYear, string truckBodyStyle, string truckExColor,
        string truckIntColor, string truckDrivetrain, string truckTransmission, string truckCylinder,
        string truckFuel, string truckDoorCount, string truckSearchString)
    {


        trucks = await truckService.GetFilteredTrucks(truckMake, truckPrice, truckMileage,
            truckYear, truckBodyStyle, truckExColor, truckIntColor, truckDrivetrain, truckTransmission,
            truckCylinder, truckFuel, truckDoorCount, truckSearchString);
    }

    void HandleLocationChanged(object sender, LocationChangedEventArgs e)
    {
        GetQueryStringValues();
        StateHasChanged();
    }

    void GetQueryStringValues()
    {
        NavManager.TryGetQueryString<string>("truckMake", out truckMake);
        NavManager.TryGetQueryString<string>("truckPrice", out truckPrice);
        NavManager.TryGetQueryString<string>("truckMileage", out truckMileage);
        NavManager.TryGetQueryString<int?>("truckYear", out truckYear);
        NavManager.TryGetQueryString<string>("truckBodyStyle", out truckBodyStyle);
        NavManager.TryGetQueryString<string>("truckExColor", out truckExColor);
        NavManager.TryGetQueryString<string>("truckIntColor", out truckIntColor);
        NavManager.TryGetQueryString<string>("truckDrivetrain", out truckDrivetrain);
        NavManager.TryGetQueryString<string>("truckTransmission", out truckTransmission);
        NavManager.TryGetQueryString<string>("truckCylinder", out truckCylinder);
        NavManager.TryGetQueryString<string>("truckFuel", out truckFuel);
        NavManager.TryGetQueryString<string>("truckDoorCount", out truckDoorCount);
        NavManager.TryGetQueryString<string>("truckSearchString", out truckSearchString);
    }


    public void Dispose()
    {
        NavManager.LocationChanged -= HandleLocationChanged;
    }

    void ReturnTrucksByMake(ChangeEventArgs e)
    {
        truckMake = e.Value.ToString();
    }

    void ReturnTrucksByPrice(ChangeEventArgs e)
    {
        truckPrice = e.Value.ToString();
    }

    void ReturnTrucksByMileage(ChangeEventArgs e)
    {
        truckMileage = e.Value.ToString();
    }

    void ReturnTrucksByYear(ChangeEventArgs e)
    {
        truckYear = int.Parse(e.Value.ToString());
    }

    void ReturnTrucksByBodyStyle(ChangeEventArgs e)
    {
        truckBodyStyle = e.Value.ToString();
    }

    void ReturnTrucksByExColor(ChangeEventArgs e)
    {
        truckExColor = e.Value.ToString();
    }

    void ReturnTrucksByIntColor(ChangeEventArgs e)
    {
        truckIntColor = e.Value.ToString();
    }

    void ReturnTrucksByDrivetrain(ChangeEventArgs e)
    {
        truckDrivetrain = e.Value.ToString();
    }

    void ReturnTrucksByTransmission(ChangeEventArgs e)
    {
        truckTransmission = e.Value.ToString();
    }

    void ReturnTrucksByCylinder(ChangeEventArgs e)
    {
        truckCylinder = e.Value.ToString();
    }

    void ReturnTrucksByFuel(ChangeEventArgs e)
    {
        truckFuel = e.Value.ToString();
    }

    void ReturnTrucksByDoorCount(ChangeEventArgs e)
    {
        truckDoorCount = e.Value.ToString();
    }



    public async Task FilterClick(MouseEventArgs e, string truckMake,
                                         string truckPrice, string truckMileage, int? truckYear,
                                         string truckBodyStyle, string truckExColor, string truckIntColor,
                                         string truckDrivetrain, string truckTransmission, string truckCylinder,
                                         string truckFuel, string truckDoorCount, string truckSearchString)
    {

        trucks = await truckService.GetFilteredTrucks(truckMake, truckPrice, truckMileage, truckYear, truckBodyStyle, truckExColor, truckIntColor, truckDrivetrain, truckTransmission, truckCylinder, truckFuel, truckDoorCount, truckSearchString);
        allTrucks = await truckService.GetFilteredTrucks(truckMake, truckPrice, truckMileage, truckYear, truckBodyStyle, truckExColor, truckIntColor, truckDrivetrain, truckTransmission, truckCylinder, truckFuel, truckDoorCount, truckSearchString);
    }

    public async Task BackToFullList(MouseEventArgs e)
    {

        SearchTerm = "";
        allTrucks = await truckService.GetTrucksAsync();
        trucks = await truckService.GetTrucksAsync();
    }


    async Task HandleFileSelected(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();

        if (file != null)
        {
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);
            ImgUploaded = ms.ToArray();
        }
    }

    public async Task SaveTruck(string modalId)
    {
        if (Model.TruckId == 0)
        {

            // id zero represents new item
            Model.CreatedDate = DateTime.Now;
            Model.Image = ImgUploaded;
            await truckService.AddTruckAsync(Model);
            trucks = await truckService.GetTrucksAsync();

        }
        else
        {
            Model.ModifiedDate = DateTime.Now;
            Model.Image = ImgUploaded;
            var truckToUpdate = await truckService.UpdateTruckAsync(Model.TruckId);
            trucks.Where(_ => _.TruckId == Model.TruckId).FirstOrDefault();
            trucks.Add(truckToUpdate);
            trucks = await truckService.GetTrucksAsync();
        }
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);

    }

    public async Task ConfirmDelete(string modalId)
    {
        var truckTodelete = trucks.Where(_ => _.TruckId == truckToDelete).FirstOrDefault();
        await truckService.DeleteTruckAsync(truckToDelete);
        trucks.Remove(truckTodelete);
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
    }

    public async Task OpenModal(string modalId, int itemTruckId)
    {
        if (itemTruckId == 0)
        {
            Model = new CarLot.Models.Truck();

        }
        else
        {
            Model = trucks.Where(_ => _.TruckId == itemTruckId).FirstOrDefault();
        }

        await _jsRuntime.InvokeVoidAsync("global.openModal", modalId);
    }




}



