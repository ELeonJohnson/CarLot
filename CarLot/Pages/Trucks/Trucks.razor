@page "/trucks"
@using CarLot.Data
@using CarLot.Models;
@inject CarLot.Data.TruckService truckService
@inject IJSRuntime _jsRuntime
@inherits OwningComponentBase<TruckService>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor





<h1 id="trucks-for-sale">Our Truck For Sale</h1>

@if (trucks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <MatButton Raised="true" TrailingIcon="directions_bus" Type="button" @onclick='@(e => OpenModal("truckModal",0))'>Add</MatButton>
    </div>
    @foreach (var truck in trucks)
    {
        <h1>ID: @truck.TruckId</h1>
        <img style="width:5%; height:5%" class="card-img" src="data:image/jpeg;base64,@Convert.ToBase64String(truck.Image)" />
        <h1>@truck.Make</h1>
        @if (SignInManager.IsSignedIn(httpContextAccessor.HttpContext.User) && Int32.Parse(UserManager.GetUserId(httpContextAccessor.HttpContext.User)) == truck.ApplicationUserId)
        {
            <button type="button" class="btn btn-primary" @onclick='@(e => OpenModal("truckModal", truck.TruckId))'>Edit</button>
            <button type="button" class="btn btn-primary" @onclick='@(e => OpenDeleteModal("deleteConfirmation", truck.TruckId))'>Delete</button>
            <a href="@($"truck/details/{truck.TruckId}")" class="btn btn-primary">Details</a>
        }
        else
        {
            <a href="@($"truck/details/{truck.TruckId}")" class="btn btn-primary">Details</a>
        }

    }

}


<div>
    <div class="modal fade" id="truckModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Truck's Information</h5>
                    <MatButton Raised="true" Type="button" data-dismiss="modal" aria-label="Close">X</MatButton>
                </div>
                <div class="modal-body">
                    <form enctype="multipart/form-data">
                        <input type="hidden" @bind="Model.TruckId" id="truckId">
                        <input type="hidden" @bind="Model.ApplicationUserId" id="applicationUserId">
                        <input type="hidden" @bind="Model.CreatedDate" id="createdDate">
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.Make" Label="Make"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Price" Label="Price" Icon="attach_money"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Mileage" Label="Mileage"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.DriveTrain" Label="Drivetrain"></MatTextField>
                                </p>
                            </div>
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.Transmission" Label="Transmission"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Cylinders" Label="Cylinders"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.Fuel" Label="Fuel"></MatTextField>
                                </p>
                                <p>
                                    <MatTextField @bind-Value="Model.DoorCount" Label="Door Count"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.Features" Label="Features" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.BodyStyle" Label="Body Style" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.ExteriorColor" Label="Exterior Color" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.InteriorColor" Label="Interior Color" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>
                                    <MatTextField @bind-Value="Model.SellerNotes" Label="Seller Notes" TextArea="true" FullWidth="true"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <h2>Tell Us More About Your Truck</h2>
                        <p id="p-apply-check">Please Check All That Applies To Your Truck.</p>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Truck Available For Home Delivery?</MatH5>
                                <MatRadioGroup @bind-Value="Model.HomeDelivery" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Truck Available For a Virtual Appointments?</MatH5>
                                <MatRadioGroup @bind-Value="Model.VirtualAppointments" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Truck New?</MatH5>
                                <MatRadioGroup @bind-Value="Model.New" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">

                                <MatH5>Is Your Truck Used?</MatH5>
                                <MatRadioGroup @bind-Value="Model.Used" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Is Your Truck Certified Preowned?</MatH5>
                                <MatRadioGroup @bind-Value="Model.CertifiedPreOwned" Items="boolItems">

                                </MatRadioGroup>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">

                                <h5>Truck's Year?</h5>
                                <p>
                                    <MatTextField @bind-Value="Model.Year" Label="Year"></MatTextField>
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <MatH5>Truck's Image</MatH5>
                                <InputFile multiple OnChange="HandleFileSelected" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <MatButton Raised="true" Type="button" data-dismiss="modal" aria-label="Close">Close</MatButton>
                    <MatButton Raised="true" Type="button" @onclick='@(e => SaveTruck("truckModal"))'>Save</MatButton>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmation" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Are You Sure You Want To Remove This Car?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" @onclick='@(e => ConfirmDelete("deleteConfirmation"))'>Ok</button>
            </div>
        </div>
    </div>
</div>



@code
{
    public CarLot.Models.Truck Model = new CarLot.Models.Truck();
    List<Truck> trucks;
    public byte[] ImgUploaded { get; set; }
    protected bool[] boolItems =
           {
                true,
                false
            };
    public int truckToDelete;


    protected override async Task OnInitializedAsync()
    {
        await load();
    }

    protected async Task load()
    {
        trucks = await truckService.GetTrucksAsync();
    }

    public async Task OpenModal(string modalId, int itemTruckId)
    {
        if (itemTruckId == 0)
        {
            Model = new CarLot.Models.Truck();

        }
        else
        {
            Model = trucks.Where(_ => _.TruckId == itemTruckId).FirstOrDefault();
        }

        await _jsRuntime.InvokeVoidAsync("global.openModal", modalId);
    }

    public async Task CloseModal(string modalId)
    {
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
    }



    public async Task SaveTruck(string modalId)
    {
        if (Model.TruckId == 0)
        {

            // id zero represents new item
            Model.CreatedDate = DateTime.Now;
            Model.Image = ImgUploaded;
            await truckService.AddTruckAsync(Model);
            trucks = await truckService.GetTrucksAsync();
        }
        else
        {
            Model.ModifiedDate = DateTime.Now;
            Model.Image = ImgUploaded;
            var truckToUpdate = await truckService.UpdateTruckAsync(Model.TruckId);
            trucks.Where(_ => _.TruckId == Model.TruckId).FirstOrDefault();
            trucks.Add(truckToUpdate);
            trucks = await truckService.GetTrucksAsync();
        }
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);

    }

    async Task HandleFileSelected(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();

        if (file != null)
        {
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);
            ImgUploaded = ms.ToArray();
        }
    }

    public async Task OpenDeleteModal(string modalId, int truckItemId)
    {
        truckToDelete = truckItemId;
        await _jsRuntime.InvokeVoidAsync("global.openModal", modalId);
    }

    public async Task ConfirmDelete(string modalId)
    {
        var truckTodelete = trucks.Where(_ => _.TruckId == truckToDelete).FirstOrDefault();
        await truckService.DeleteTruckAsync(truckToDelete);
        trucks.Remove(truckTodelete);
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
    }


}



