#pragma checksum "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\Pages\SUVs\SUVs.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1154e9db42dc3159b91e2cc202b1292fb846c61f"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace CarLot.Pages.SUVs
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using CarLot;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using CarLot.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using BlazorInputFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\Pages\SUVs\SUVs.razor"
using CarLot.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\Pages\SUVs\SUVs.razor"
using CarLot.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\Pages\SUVs\SUVs.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/suvs")]
    public partial class SUVs : OwningComponentBase<SUVService>, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 447 "C:\Users\Enoch\Desktop\Projects For Portfolio\CarLot\CarLot\Pages\SUVs\SUVs.razor"
 
    public List<SUV> suvs { get; set; } = new List<SUV>();
    public List<SUV> allSUVs { get; set; } = new List<SUV>();
    public CarLot.Models.SUV Model = new CarLot.Models.SUV();
    public byte[] ImgUploaded { get; set; }
    protected bool[] boolItems =
           {
                true,
                false
            };
    public int suvToDelete;





    string suvMake = "";
    string suvPrice = "";
    string suvMileage = "";
    int? suvYear = 0;
    string suvBodyStyle = "";
    string suvExColor = "";
    string suvIntColor = "";
    string suvDrivetrain = "";
    string suvTransmission = "";
    string suvCylinder = "";
    string suvFuel = "";
    string suvDoorCount = "";
    string suvSearchString = "";

    string SearchTerm { get; set; } = "";

    public List<SUV> SearchSUVsItems { get; set; } = new List<SUV>();
    public List<SUV> FilteredSUVs => SearchSUVsItems.Where(i => i.Make.ToLower().Contains(SearchTerm.ToLower())).ToList();



    protected override async Task OnInitializedAsync()
    {
        suvs = await suvService.GetSUVsAsync();
        allSUVs = await suvService.GetSUVsAsync();
        SearchSUVsItems = await suvService.GetSUVsAsync();

        GetQueryStringValues();
        NavManager.LocationChanged += HandleLocationChanged;

        if (suvMake != null || suvPrice != null || suvMileage != null
        || suvYear != null || suvBodyStyle != null || suvExColor != null
        || suvIntColor != null || suvDrivetrain != null || suvTransmission != null
        || suvCylinder != null || suvFuel != null || suvDoorCount != null || suvSearchString != null)
        {
            suvs = await suvService.GetFilteredSUVs(suvMake, suvPrice, suvMileage, suvYear, suvBodyStyle, suvExColor, suvIntColor, suvDrivetrain, suvTransmission, suvCylinder, suvFuel, suvDoorCount, suvSearchString);
            allSUVs = await suvService.GetFilteredSUVs(suvMake, suvPrice, suvMileage, suvYear, suvBodyStyle, suvExColor, suvIntColor, suvDrivetrain, suvTransmission, suvCylinder, suvFuel, suvDoorCount, suvSearchString);

        }

    }

    public async Task SearchTextTab(MouseEventArgs e, string suvMake, string suvPrice,
        string suvMileage, int? suvYear, string suvBodyStyle, string suvExColor,
        string suvIntColor, string suvDrivetrain, string suvTransmission, string suvCylinder,
        string suvFuel, string suvDoorCount, string suvSearchString)
    {


        suvs = await suvService.GetFilteredSUVs(suvMake, suvPrice, suvMileage,
        suvYear, suvBodyStyle, suvExColor, suvIntColor, suvDrivetrain, suvTransmission,
        suvCylinder, suvFuel, suvDoorCount, suvSearchString);
    }

    void HandleLocationChanged(object sender, LocationChangedEventArgs e)
    {
        GetQueryStringValues();
        StateHasChanged();
    }

    void GetQueryStringValues()
    {
        NavManager.TryGetQueryString<string>("suvMake", out suvMake);
        NavManager.TryGetQueryString<string>("suvPrice", out suvPrice);
        NavManager.TryGetQueryString<string>("suvMileage", out suvMileage);
        NavManager.TryGetQueryString<int?>("suvYear", out suvYear);
        NavManager.TryGetQueryString<string>("suvBodyStyle", out suvBodyStyle);
        NavManager.TryGetQueryString<string>("suvExColor", out suvExColor);
        NavManager.TryGetQueryString<string>("suvIntColor", out suvIntColor);
        NavManager.TryGetQueryString<string>("suvDrivetrain", out suvDrivetrain);
        NavManager.TryGetQueryString<string>("suvTransmission", out suvTransmission);
        NavManager.TryGetQueryString<string>("suvCylinder", out suvCylinder);
        NavManager.TryGetQueryString<string>("suvFuel", out suvFuel);
        NavManager.TryGetQueryString<string>("suvDoorCount", out suvDoorCount);
        NavManager.TryGetQueryString<string>("suvSearchString", out suvSearchString);
    }


    public void Dispose()
    {
        NavManager.LocationChanged -= HandleLocationChanged;
    }

    void ReturnSUVsByMake(ChangeEventArgs e)
    {
        suvMake = e.Value.ToString();
    }

    void ReturnSUVsByPrice(ChangeEventArgs e)
    {
        suvPrice = e.Value.ToString();
    }

    void ReturnSUVsByMileage(ChangeEventArgs e)
    {
        suvMileage = e.Value.ToString();
    }

    void ReturnSUVsByYear(ChangeEventArgs e)
    {
        suvYear = int.Parse(e.Value.ToString());
    }

    void ReturnSUVsByBodyStyle(ChangeEventArgs e)
    {
        suvBodyStyle = e.Value.ToString();
    }

    void ReturnSUVsByExColor(ChangeEventArgs e)
    {
        suvExColor = e.Value.ToString();
    }

    void ReturnSUVsByIntColor(ChangeEventArgs e)
    {
        suvIntColor = e.Value.ToString();
    }

    void ReturnSUVsByDrivetrain(ChangeEventArgs e)
    {
        suvDrivetrain = e.Value.ToString();
    }

    void ReturnSUVsByTransmission(ChangeEventArgs e)
    {
        suvTransmission = e.Value.ToString();
    }

    void ReturnSUVsByCylinder(ChangeEventArgs e)
    {
        suvCylinder = e.Value.ToString();
    }

    void ReturnSUVsByFuel(ChangeEventArgs e)
    {
        suvFuel = e.Value.ToString();
    }

    void ReturnSUVsByDoorCount(ChangeEventArgs e)
    {
        suvDoorCount = e.Value.ToString();
    }



    public async Task FilterClick(MouseEventArgs e, string suvMake,
                                         string suvPrice, string suvMileage, int? suvYear,
                                         string suvBodyStyle, string suvExColor, string suvIntColor,
                                         string suvDrivetrain, string suvTransmission, string suvCylinder,
                                         string suvFuel, string suvDoorCount, string suvSearchString)
    {

        suvs = await suvService.GetFilteredSUVs(suvMake, suvPrice, suvMileage, suvYear, suvBodyStyle, suvExColor, suvIntColor, suvDrivetrain, suvTransmission, suvCylinder, suvFuel, suvDoorCount, suvSearchString);
        allSUVs = await suvService.GetFilteredSUVs(suvMake, suvPrice, suvMileage, suvYear, suvBodyStyle, suvExColor, suvIntColor, suvDrivetrain, suvTransmission, suvCylinder, suvFuel, suvDoorCount, suvSearchString);
    }

    public async Task BackToFullList(MouseEventArgs e)
    {

        SearchTerm = "";
        allSUVs = await suvService.GetSUVsAsync();
        suvs = await suvService.GetSUVsAsync();
    }


    async Task HandleFileSelected(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();

        if (file != null)
        {
            var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);
            ImgUploaded = ms.ToArray();
        }
    }

    public async Task SaveSUV(string modalId)
    {
        if (Model.SUVId == 0)
        {

            // id zero represents new item
            Model.CreatedDate = DateTime.Now;
            Model.Image = ImgUploaded;
            await suvService.AddSUVAsync(Model);
            suvs = await suvService.GetSUVsAsync();

        }
        else
        {
            Model.ModifiedDate = DateTime.Now;
            Model.Image = ImgUploaded;
            var suvToUpdate = await suvService.UpdateSUVAsync(Model.SUVId);
            suvs.Where(_ => _.SUVId == Model.SUVId).FirstOrDefault();
            suvs.Add(suvToUpdate);
            suvs = await suvService.GetSUVsAsync();
        }
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);

    }

    public async Task ConfirmDelete(string modalId)
    {
        var suvTodelete = suvs.Where(_ => _.SUVId == suvToDelete).FirstOrDefault();
        await suvService.DeleteSUVAsync(suvToDelete);
        suvs.Remove(suvTodelete);
        await _jsRuntime.InvokeAsync<object>("global.closeModal", modalId);
    }

    public async Task OpenModal(string modalId, int itemSUVId)
    {
        if (itemSUVId == 0)
        {
            Model = new CarLot.Models.SUV();

        }
        else
        {
            Model = suvs.Where(_ => _.SUVId == itemSUVId).FirstOrDefault();
        }

        await _jsRuntime.InvokeVoidAsync("global.openModal", modalId);
    }





#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserManager<ApplicationUser> UserManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SignInManager<ApplicationUser> SignInManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime _jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private CarLot.Data.SUVService suvService { get; set; }
    }
}
#pragma warning restore 1591
